services:
  keycloak:
    image: keycloak/keycloak:26.3
    container_name: hm-keycloak
    restart: unless-stopped
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://hm-psql-keycloak:5432/${POSTGRES_KEYCLOAK_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    command:
      - start-dev
      - --import-realm
      - --http-enabled=true
      - --hostname-strict=false
      - --hostname=host.docker.internal
    volumes:
      - ./docker-files/keycloak/import:/opt/keycloak/data/import
    ports:
      - "${KEYCLOAK_PORT}:8080"
    networks:
      - helpmate_network
    depends_on:
      - postgres-keycloak

  postgres-keycloak:
    image: postgres:17.2
    container_name: hm-psql-keycloak
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_KEYCLOAK_DB}
    ports:
      - "${POSTGRES_KEYCLOAK_PORT}:5432"
    volumes:
      - postgres-keycloak-data:/var/lib/postgresql/data
    networks:
      - helpmate_network

  rabbitmq:
    image: rabbitmq:3.13.7-management
    container_name: hm-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
        - helpmate_network

  mailhog:
    image: mailhog/mailhog
    container_name: hm-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - helpmate_network

  postgres-user:
    image: postgres:17.2
    container_name: hm-psql-user
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_USER_DB}
    ports:
      - "${POSTGRES_USER_PORT}:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - helpmate_network

  user-service:
    build:
        context: .
        dockerfile: docker-files/user-service/Dockerfile
    container_name: hm-user-service
    restart: unless-stopped
    env_file: .env
    ports:
      - "${USER_SERVICE_PORT}:8080"
    depends_on:
      - postgres-user
      - keycloak
      - rabbitmq
    networks:
      - helpmate_network

  postgres-ticket:
    image: postgres:17.2
    container_name: hm-psql-ticket
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_TICKET_DB}
    ports:
      - "${POSTGRES_TICKET_PORT}:5432"
    volumes:
      - postgres-ticket-data:/var/lib/postgresql/data
    networks:
      - helpmate_network

  ticket-service:
    build:
      context: .
      dockerfile: docker-files/ticket-service/Dockerfile
    container_name: hm-ticket-service
    restart: unless-stopped
    env_file: .env
    ports:
      - "${TICKET_SERVICE_PORT}:8080"
    depends_on:
      - postgres-ticket
      - keycloak
      - rabbitmq
    networks:
      - helpmate_network

  postgres-notification:
    image: postgres:17.2
    container_name: hm-psql-notification
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NOTIFICATION_DB}
    ports:
      - "${POSTGRES_NOTIFICATION_PORT}:5432"
    volumes:
      - postgres-notification-data:/var/lib/postgresql/data
    networks:
      - helpmate_network

  notification-service:
    build:
      context: .
      dockerfile: docker-files/notification-service/Dockerfile
    container_name: hm-notification-service
    restart: unless-stopped
    env_file: .env
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:8080"
    depends_on:
      - postgres-notification
      - keycloak
      - rabbitmq
    networks:
      - helpmate_network

networks:
  helpmate_network:
    driver: bridge

volumes:
  postgres-keycloak-data:
  postgres-user-data:
  postgres-ticket-data:
  postgres-notification-data: